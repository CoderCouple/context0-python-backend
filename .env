# ================================
# EXISTING APPLICATION CONFIGURATION
# ================================
CLERK_API_KEY=your_clerk_api_key_here
SQL_ALCHEMY_DEBUG=true
DB_HOST=localhost
DB_PORT=5433
DB_USER=postgres
DB_PASSWORD=password
DB_NAME=postgres
AUTH_DISABLED=true
CORS_ORIGINS=["http://localhost:3000"]
CLERK_SECRET_KEY=sk_test_vu47nWkVclhjdfiYm2cKBauqvKLQrgb7lQuQi1AsSu
CLERK_WEBHOOK_SIGNING_SECRET=whsec_e3YQjXDLFQVQEPVk/BPozhut+6adh/Cu
OPENAI_API_KEY=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

# ================================
# MEMORY SYSTEM CONFIGURATION
# ================================
# Development setup using Docker containers
# Run: docker-compose up -d to start all services

# Neo4j Configuration (Docker)
NEO4J_URI=bolt://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=devpassword
NEO4J_DATABASE=neo4j

# MongoDB Configuration (Docker)
MONGODB_CONNECTION_STRING=mongodb://localhost:27017
MONGODB_DATABASE=memory_system
MONGODB_COLLECTION=memories

# MongoDB for audit logging (Docker)
MONGODB_AUDIT_CONNECTION_STRING=mongodb://localhost:27017
MONGODB_AUDIT_DATABASE=memory_audit
MONGODB_AUDIT_COLLECTION=audit_log

# TimescaleDB Configuration (Docker)
TIMESCALE_CONNECTION_STRING=postgresql://postgres:devpassword@localhost:5434/timescale_db
TIMESCALE_TABLE_NAME=memory_timeseries

# Qdrant Configuration (Docker)
QDRANT_HOST=localhost
QDRANT_PORT=6333
QDRANT_COLLECTION=memory_vectors

# Redis Configuration (Docker) - Optional
REDIS_URL=redis://:devpassword@localhost:6379

# ================================
# GENERAL APPLICATION CONFIGURATION
# ================================
APP_ENV=development
LOG_LEVEL=INFO
DEBUG=true

# ================================
# DATABASE MANAGEMENT TOOLS (Docker)
# ================================
# Access these tools when running docker-compose:
#
# pgAdmin (PostgreSQL/TimescaleDB): http://localhost:8080
# - Email: admin@memory.dev
# - Password: devpassword
#
# Mongo Express (MongoDB): http://localhost:8081
# - Username: admin
# - Password: devpassword
#
# Neo4j Browser: http://localhost:7474
# - Username: neo4j
# - Password: devpassword
#
# Qdrant Dashboard: http://localhost:6333/dashboard

# ================================
# PRODUCTION CONFIGURATION (Cloud Services)
# ================================
# Uncomment and use these for production deployment

# Pinecone Configuration (Production)
PINECONE_API_KEY=pcsk_Rbnaw_BhEhww6hcjNeyhYLMTgUoqjveAonk3Q9vQTUniDYX4Ec15tRcfFQJf1k5hGuTK6
PINECONE_ENVIRONMENT=us-east-1-aws
PINECONE_INDEX_NAME=memory-index

# Neo4j Aura Configuration (Production)
NEO4J_URI=neo4j+s://e51aba35.databases.neo4j.io
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=JGis6EVxWuhKDcEPqkHC4TwXHPNDP2qbgT_hMMu2S6w
NEO4J_DATABASE=neo4j

# MongoDB Atlas Configuration (Production)
MONGODB_CONNECTION_STRING=mongodb+srv://sunil28071987:bwFmIliX3bY7stQM@cluster0.o41txx.mongodb.net/memory_system?retryWrites=true&w=majority&appName=Cluster0
MONGODB_AUDIT_CONNECTION_STRING=mongodb+srv://sunil28071987:bwFmIliX3bY7stQM@cluster0.o41txx.mongodb.net/memory_audit?retryWrites=true&w=majority&appName=Cluster0

# TimescaleDB Cloud Configuration (Production) - For time series data
TIMESCALE_CONNECTION_STRING=postgresql://tsdbadmin:wactq1jdbsg3ynp2@gxf1ouegtg.vwx5txqh46.tsdb.cloud.timescale.com:34135/tsdb?sslmode=require

# Neon PostgreSQL Configuration (Production) - For relational data
POSTGRESQL_CONNECTION_STRING=postgresql://neondb_owner:npg_AGXh4HVi9wCm@ep-fancy-night-afgdzdwk-pooler.c-2.us-west-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require
POSTGRESQL_TABLE_NAME=memories
# POSTGRESQL_AUDIT_CONNECTION_STRING=postgresql://user:password@localhost:5432/memory_audit_db
# POSTGRESQL_AUDIT_TABLE_NAME=audit_log