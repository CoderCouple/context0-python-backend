# ================================
# CONTEXT0 ENVIRONMENT CONFIGURATION
# ================================
# Copy this file to .env.dev or .env.prod and fill in your values
#
# The application loads environment-specific files:
# - Development: .env.dev (default)
# - Production: .env.prod (when APP_ENV=production)
#
# To use production settings:
# export APP_ENV=production

# ================================
# APPLICATION SETTINGS
# ================================
# Environment: development | production
APP_ENV=development

# Debug mode (true | false)
DEBUG=true

# Logging level: DEBUG | INFO | WARNING | ERROR
LOG_LEVEL=INFO

# Disable authentication for development (true | false)
AUTH_DISABLED=false

# Allowed CORS origins (JSON array)
CORS_ORIGINS=["http://localhost:3000"]

# ================================
# AUTHENTICATION (Clerk)
# ================================
# Get these from https://clerk.dev
CLERK_API_KEY=your_clerk_api_key_here
CLERK_WEBHOOK_SIGNING_SECRET=your_webhook_secret_here

# ================================
# POSTGRESQL DATABASE (SQLAlchemy)
# ================================
# For workflow and relational data
SQL_ALCHEMY_DEBUG=false
DB_HOST=localhost
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=your_secure_password
DB_NAME=context0

# ================================
# MONGODB (Document Store)
# ================================
# For memory storage and chat sessions
# Local: mongodb://localhost:27017
# Atlas: mongodb+srv://username:password@cluster.mongodb.net/
MONGODB_CONNECTION_STRING=mongodb://localhost:27017
MONGODB_DATABASE_NAME=context0

# For audit logging (can be same as main DB)
MONGODB_AUDIT_CONNECTION_STRING=mongodb://localhost:27017

# ================================
# NEO4J (Graph Database)
# ================================
# For relationship and knowledge graph
# Local: bolt://localhost:7687
# Aura: neo4j+s://your-instance.databases.neo4j.io
NEO4J_URI=bolt://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=your_password
NEO4J_DATABASE=neo4j

# ================================
# TIMESCALEDB (Time Series)
# ================================
# For temporal data and analytics
TIMESCALE_CONNECTION_STRING=postgresql://user:password@localhost:5432/timescale_db?sslmode=require

# ================================
# PINECONE (Vector Database)
# ================================
# For semantic search and embeddings
# Get API key from https://www.pinecone.io
PINECONE_API_KEY=your_pinecone_api_key
PINECONE_ENVIRONMENT=us-east-1-aws
PINECONE_INDEX_NAME=memory-index

# ================================
# AI SERVICES
# ================================
# OpenAI API for embeddings and chat
# Get from https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-openai-api-key

# Anthropic Claude API
# Get from https://console.anthropic.com/account/keys
ANTHROPIC_API_KEY=sk-ant-your-anthropic-key

# Google Gemini API
# Get from https://makersuite.google.com/app/apikey
GOOGLE_API_KEY=your-google-api-key

# Default LLM Settings
DEFAULT_LLM_PROVIDER=openai
DEFAULT_LLM_MODEL=gpt-4o-mini
DEFAULT_TEMPERATURE=0.1
DEFAULT_MAX_TOKENS=2048

# ================================
# REDIS (Optional Cache)
# ================================
# For caching and rate limiting
REDIS_URL=redis://localhost:6379

# ================================
# MEMORY SYSTEM CONFIGURATION
# ================================
# Control verbosity of memory system logs
MEMORY_VERBOSE_CONFIG=true        # Show configuration logs
MEMORY_VERBOSE_OPERATIONS=true    # Show operation logs
MEMORY_LOG_LEVEL=INFO            # Memory system log level

# ================================
# SECURITY (Production Only)
# ================================
# JWT configuration
JWT_SECRET_KEY=your-very-secure-jwt-secret-min-32-chars
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# ================================
# MONITORING (Optional)
# ================================
# Sentry error tracking
# SENTRY_DSN=https://your-key@sentry.io/project-id

# New Relic APM
# NEW_RELIC_LICENSE_KEY=your-license-key

# ================================
# DOCKER DEVELOPMENT SERVICES
# ================================
# When using docker-compose for local development:
#
# Service URLs:
# - MongoDB: http://localhost:27017
# - Neo4j Browser: http://localhost:7474
# - pgAdmin: http://localhost:8080
# - Mongo Express: http://localhost:8081
#
# Default Credentials:
# - Neo4j: neo4j/devpassword
# - pgAdmin: admin@memory.dev/devpassword
# - Mongo Express: admin/devpassword